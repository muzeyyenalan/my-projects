AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Roman Numerals Converter Application. This template creates Python Flask Web Application on 
  Amazon Linux 2 (ami-033b95fb8079dc481) EC2 Instance with custom security group allowing http connections on port 80 and SSH 
  connection on port 22. Roman Numerals Converter Application is downloaded from Github repository, then installed on Flask.

Parameters:

  KeyName:
    Description: Enter the name of your Key Pair for SSH connections
    Type: AWS::EC2::KeyPair::KeyName
  
Resources:
  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enable HTTP for Flask Web Server and SSH port to secure reach to my EC2
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
     
  WebServerHost:
      Type: AWS::EC2::Instance
      Properties:
        KeyName: !Ref KeyName
        ImageId: ami-033b95fb8079dc481
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        UserData: !Base64 |
          #!/bin/bash 
          yum install -y
          yum install python3 -y
          pip3 install flask
          cd /home/ec2-user
          wget https://raw.githubusercontent.com/muzeyyenalan/my-projects/main/aws1/projects/Project-001-Roman-Numerals-Converter/app.py
          mkdir templates
          cd templates
          wget https://raw.githubusercontent.com/muzeyyenalan/my-projects/main/aws1/projects/Project-001-Roman-Numerals-Converter/templates/index.html
          wget https://raw.githubusercontent.com/muzeyyenalan/my-projects/main/aws1/projects/Project-001-Roman-Numerals-Converter/templates/result.html
          cd ..
          python3 app.py

        Tags:
          - Key: Name
            Value: !Sub Web Server of ${AWS::StackName} Stack
    
Outputs:
  WebsiteURL: 
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName
    Description: Roman Numerals Converter Application URL


          